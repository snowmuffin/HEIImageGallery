name: CI Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test Server (Express)
    runs-on: ubuntu-latest

    steps:
 
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18'


      - name: Install Dependencies
        run: npm install

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Image Generator Test
        run: |
          python testimagegen.py --output_dir images --width 200 --height 200 --bg_color "#FFFFFF" --text_color "#FF0000" --font_size 100 --num_images 10 --file_prefix image


      - name: Start Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          PROXY_SERVER_URL : ${{ secrets.PROXY_SERVER_URL }}
        run: |
          node server.js &
          echo $! > server.pid  # 서버 PID 저장


      - name: Server Tests
        run: node uploadImages.js


      - name: Wait for Server to be Ready
        run: |
          # 최대 30초까지 대기
          for i in {1..30}; do
            nc -z localhost 3000 && echo "Server is up!" && exit 0
            echo "Waiting for server to start..."
            sleep 1
          done
          echo "Server did not start in time." && exit 1

  
      - name: Run Tests
        run: npm test


      - name: Stop Server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi
